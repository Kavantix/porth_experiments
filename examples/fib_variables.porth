include "std.porth"
include "../malloc.porth"
include "../shared.porth"

macro fib_a @scratch cast(ptr) end
macro @fib_a fib_a @64 end
macro !fib_a fib_a !64 end
macro fib_b @scratch sizeof(u64) + cast(ptr) end
macro @fib_b fib_b @64 end
macro !fib_b fib_b !64 end
macro fib_n @scratch sizeof(u64) 2 * + cast(ptr) end
macro @fib_n fib_n @64 end
macro !fib_n fib_n !64 end

// Inputs: none all in malloced memory
proc fib_inner
  while @fib_n 0 > do
    @fib_b @fib_a +
    @fib_b !fib_a
    !fib_b
    fib_n dec64
  end
  @fib_b
end

// Inputs: n -- calculates the nth fib number
proc fibn
  dup 1 = if
    drop 1
  orelse dup 2 = if
    drop 1
  else
    2 -
    sizeof(u64) 3 * malloc !scratch
    !fib_n
    1 !fib_a
    1 !fib_b
    fib_inner
    @scratch free drop
  end
end

1 fibn print
6 fibn print
